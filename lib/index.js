import {
  readFileSync,
  writeFileSync,
  existsSync,
  mkdir,
  mkdirSync
} from 'node:fs';

import http from 'superagent';

import parse from './parse.js';

const expressmd = function(app, config) {
  let views = app.get('views-md');
  let views_hbs = app.get('views');
  app.use((req, res, next) => {

    res.md = async function(view, options) {

      let content = readFileSync(`${process.cwd()}${views.startsWith('/') ? views: '/' + views}${(view.startsWith('/') && !views.endsWith('/')) ? view: '/' + view}.md`, 'utf8');

      let html = [];
      let lines = content.split('\n');
      lines.forEach((line) => {
        line = line;

        html.push(parse(line));
      });

      let hbsRoute = `${process.cwd()}${views_hbs.startsWith('/') ? views_hbs: '/' + views_hbs}${(view.startsWith('/')) ? view: '/' + view}.hbs`;

      if (!existsSync(`${process.cwd() + '/' + views_hbs}`)) {
        mkdirSync(`${process.cwd() + '/' + views_hbs}`);
        writeFileSync(`${process.cwd() + '/' + views_hbs}/generated_by_express-markdown.txt`, 'Autogenerated by express-markdown because hbs views directory does not exist.(You can delete this text file, dont delete the other files.)');

        mkdirSync(`${process.cwd() + '/' + views_hbs}/layouts`);
        mkdirSync(`${process.cwd() + '/' + views_hbs}/partials`);
        
        let { text: main_layout } = await http.get('https://raw.githubusercontent.com/k1-1960/express-md/main/src/views-hbs/layouts/main.hbs');
        writeFileSync(`${process.cwd() + '/' + views_hbs}/layouts/main.hbs`, main_layout, 'utf8');

        let {text: expressmd_partial } = await http.get('https://raw.githubusercontent.com/k1-1960/express-md/main/src/views-hbs/partials/expressmd.hbs');
        writeFileSync(`${process.cwd() + '/' + views_hbs}/partials/expressmd.hbs`, expressmd_partial, 'utf8')
      }

      writeFileSync(hbsRoute, html.join('\n'), 'utf8');
      let htmlC = html.join('\n');
      res.render(view, {
        ...options,
        baseUrl: config.baseUrl || 'http://localhost:3000'
      });
    };

    next();
  });
};

export default expressmd;